
//Negative number

https://www.youtube.com/watch?v=jcn70G4YhPw

#include <iostream>

using namespace std;

template <typename T>
class demo
{
    T x;
public:
    demo() { cout<<"Negative number: \n";}
    demo(T a) { x = a;} // demo(T v): x(v) {}
    
    void getdata(T a);
    void display();
    void operator -();
};

template <typename T>
void demo<T>::getdata(T a)
{
    x=a;
}

template <typename T>
void demo<T>::display()
{
    cout<< x <<endl;
}

template <typename T>
void demo<T>::operator -()
{
    x = -x;
}

int main()
{
    demo<int> obj1();
    
    obj1.getdata(10); //funtion overload
    
    obj1.display();
    -obj1;
    obj1.display();
    
    return 0;
}

OUTPUT:

Negative number:
10
-10



/*
use class contstructor to get data
int main()
{
    demo<int> obj1(10); // constructor
    
    //obj1.getdata(10);
    
    obj1.display();
    -obj1;
    obj1.display();
    
    return 0;
}

OUTPUT:

10
-10

// the sentence "Negative number:" will not appear because we not call constructor demo(), we call constructor demo(T a) to pass a value by parameter.

*/


