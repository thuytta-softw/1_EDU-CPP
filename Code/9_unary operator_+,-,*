
// +, -, *, /, oporater

#include <iostream>

using namespace std;

template <typename T>
class Multiply
{
    T x;
public:
    Multiply(){}
    //demo(T a){ x = a;}
    Multiply(T v): x(v){}

    void setdata(T a);
    void display();
    Multiply operator *(Multiply c);
    //void operator +();
};

template <typename T>
void Multiply<T>::setdata(T a)
{
    x=a;
}

template <typename T>
void Multiply<T>::display()
{
    cout<<x<<endl;
}

template <typename T>
Multiply<T> Multiply<T>::operator*(Multiply<T> c)
{
    Multiply temp;
    temp.x = x * c.x;
    return temp;
}

int main()
{
    Multiply<int> obj1,obj2, obj3;

    obj1.setdata(5);
    obj2.setdata(20);

    obj1.display();
    obj2.display();

    obj3 = obj1 * obj2;
    obj3.display();

    return 0;
}

}
